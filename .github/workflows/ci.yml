name: Continuous Integration

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]
  schedule:
    # Run daily at 2 AM UTC
    - cron: '0 2 * * *'

env:
  CARGO_TERM_COLOR: always
  RUST_BACKTRACE: 1

jobs:
  # Feature Matrix Testing
  feature-matrix:
    name: Feature Matrix (${{ matrix.features }})
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        features:
          - "default"
          - "moka-cache"
          - "memory-mapped"
          - "redis-cache"
          - "mongodb-storage"
          - "sqlx-database"
          - "cli-tools"
          - "heavy-deps"
          - "moka-cache,memory-mapped"
          - "redis-cache,mongodb-storage"
          - "memory-mapped,redis-cache,mongodb-storage"
          - "all-features"
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Install Rust
      uses: dtolnay/rust-toolchain@stable
      with:
        components: rustfmt, clippy
    
    - name: Cache dependencies
      uses: actions/cache@v4
      with:
        path: |
          ~/.cargo/registry
          ~/.cargo/git
          target
        key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}
        restore-keys: |
          ${{ runner.os }}-cargo-
    
    - name: Install system dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y pkg-config libssl-dev
    
    - name: Check compilation (default features)
      if: matrix.features == 'default'
      run: cargo check -p actor-core
    
    - name: Check compilation (specific features)
      if: matrix.features != 'default' && matrix.features != 'all-features'
      run: cargo check -p actor-core --features="${{ matrix.features }}"
    
    - name: Check compilation (all features)
      if: matrix.features == 'all-features'
      run: cargo check -p actor-core --all-features
    
    - name: Run tests (default features)
      if: matrix.features == 'default'
      run: cargo test -p actor-core --lib
    
    - name: Run tests (specific features)
      if: matrix.features != 'default' && matrix.features != 'all-features'
      run: cargo test -p actor-core --lib --features="${{ matrix.features }}"
    
    - name: Run tests (all features)
      if: matrix.features == 'all-features'
      run: cargo test -p actor-core --lib --all-features

  # Core Quality Checks
  quality:
    name: Code Quality
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Install Rust
      uses: dtolnay/rust-toolchain@stable
      with:
        components: rustfmt, clippy
    
    - name: Cache dependencies
      uses: actions/cache@v4
      with:
        path: |
          ~/.cargo/registry
          ~/.cargo/git
          target
        key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}
    
    - name: Install system dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y pkg-config libssl-dev
    
    - name: Check formatting
      run: cargo fmt --all -- --check
    
    - name: Run Clippy
      run: cargo clippy -p actor-core --all-features -- -D warnings
    
    - name: Run Clippy (no features)
      run: cargo clippy -p actor-core -- -D warnings
    
    - name: Check documentation
      run: cargo doc -p actor-core --all-features --no-deps
      env:
        RUSTDOCFLAGS: "-D warnings"

  # Performance Regression Testing
  performance:
    name: Performance Tests
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Install Rust
      uses: dtolnay/rust-toolchain@stable
    
    - name: Cache dependencies
      uses: actions/cache@v4
      with:
        path: |
          ~/.cargo/registry
          ~/.cargo/git
          target
        key: ${{ runner.os }}-cargo-perf-${{ hashFiles('**/Cargo.lock') }}
    
    - name: Install system dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y pkg-config libssl-dev
    
    - name: Run performance benchmarks
      run: cargo bench -p actor-core --all-features
    
    - name: Run performance tests
      run: cargo test -p actor-core --release --test performance_tests --all-features

  # Integration Testing
  integration:
    name: Integration Tests
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Install Rust
      uses: dtolnay/rust-toolchain@stable
    
    - name: Cache dependencies
      uses: actions/cache@v4
      with:
        path: |
          ~/.cargo/registry
          ~/.cargo/git
          target
        key: ${{ runner.os }}-cargo-integration-${{ hashFiles('**/Cargo.lock') }}
    
    - name: Install system dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y pkg-config libssl-dev
    
    - name: Run integration tests
      run: cargo test -p actor-core --test '*' --all-features
    
    - name: Run examples
      run: |
        cargo run -p actor-core --example basic_usage --features=cli-tools
        cargo run -p actor-core --example subsystem_example --features=cli-tools

  # Cross-platform Testing
  cross-platform:
    name: Cross Platform (${{ matrix.os }})
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Install Rust
      uses: dtolnay/rust-toolchain@stable
    
    - name: Cache dependencies
      uses: actions/cache@v4
      with:
        path: |
          ~/.cargo/registry
          ~/.cargo/git
          target
        key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}
    
    - name: Install system dependencies (Ubuntu)
      if: matrix.os == 'ubuntu-latest'
      run: |
        sudo apt-get update
        sudo apt-get install -y pkg-config libssl-dev
    
    - name: Install system dependencies (macOS)
      if: matrix.os == 'macos-latest'
      run: |
        brew install openssl pkg-config
    
    - name: Check compilation
      run: cargo check -p actor-core --all-features
    
    - name: Run tests
      run: cargo test -p actor-core --lib --all-features

  # Security Audit
  security:
    name: Security Audit
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Install Rust
      uses: dtolnay/rust-toolchain@stable
    
    - name: Install cargo-audit
      run: cargo install cargo-audit
    
    - name: Run security audit
      run: cargo audit
    
    - name: Run cargo-deny
      run: |
        cargo install cargo-deny
        cargo deny check -d crates/actor-core/deny.toml

  # Coverage Report
  coverage:
    name: Code Coverage
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Install Rust
      uses: dtolnay/rust-toolchain@stable
      with:
        components: llvm-tools-preview
    
    - name: Cache dependencies
      uses: actions/cache@v4
      with:
        path: |
          ~/.cargo/registry
          ~/.cargo/git
          target
        key: ${{ runner.os }}-cargo-coverage-${{ hashFiles('**/Cargo.lock') }}
    
    - name: Install system dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y pkg-config libssl-dev
    
    - name: Install cargo-llvm-cov
      run: cargo install cargo-llvm-cov
    
    - name: Generate coverage report
      run: cargo llvm-cov -p actor-core --all-features --lcov --output-path lcov.info
    
    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v4
      with:
        file: lcov.info
        flags: unittests
        name: codecov-umbrella
        fail_ci_if_error: true

  # Minimum Supported Rust Version (MSRV)
  msrv:
    name: MSRV Check
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Install MSRV Rust
      uses: dtolnay/rust-toolchain@master
      with:
        toolchain: "1.89"  # From Cargo.toml rust-version
    
    - name: Cache dependencies
      uses: actions/cache@v4
      with:
        path: |
          ~/.cargo/registry
          ~/.cargo/git
          target
        key: ${{ runner.os }}-cargo-msrv-${{ hashFiles('**/Cargo.lock') }}
    
    - name: Install system dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y pkg-config libssl-dev
    
    - name: Check MSRV compilation
      run: cargo check -p actor-core --all-features
