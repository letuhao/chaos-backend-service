name: Config Validation

on:
  push:
    branches: [ main, develop ]
    paths:
      - 'configs/**'
      - 'src/registry/loader.rs'
      - 'tests/config_validation_tests.rs'
  pull_request:
    branches: [ main, develop ]
    paths:
      - 'configs/**'
      - 'src/registry/loader.rs'
      - 'tests/config_validation_tests.rs'

jobs:
  validate-configs:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Install Rust
      uses: actions-rs/toolchain@v1
      with:
        toolchain: stable
        components: rustfmt, clippy
        override: true
    
    - name: Cache cargo registry
      uses: actions/cache@v3
      with:
        path: ~/.cargo/registry
        key: ${{ runner.os }}-cargo-registry-${{ hashFiles('**/Cargo.lock') }}
    
    - name: Cache cargo index
      uses: actions/cache@v3
      with:
        path: ~/.cargo/git
        key: ${{ runner.os }}-cargo-index-${{ hashFiles('**/Cargo.lock') }}
    
    - name: Cache cargo build
      uses: actions/cache@v3
      with:
        path: target
        key: ${{ runner.os }}-cargo-build-target-${{ hashFiles('**/Cargo.lock') }}
    
    - name: Check config files exist
      run: |
        echo "Checking that config files exist..."
        test -f configs/cap_layers.yaml
        test -f configs/combiner.yaml
        echo "✅ All config files exist"
    
    - name: Validate YAML syntax
      run: |
        echo "Validating YAML syntax..."
        python3 -c "import yaml; yaml.safe_load(open('configs/cap_layers.yaml')); print('✅ cap_layers.yaml is valid YAML')"
        python3 -c "import yaml; yaml.safe_load(open('configs/combiner.yaml')); print('✅ combiner.yaml is valid YAML')"
    
    - name: Run config validation tests
      run: cargo test --test config_validation_tests --verbose
    
    - name: Run config validation tests with extra_buckets feature
      run: cargo test --test config_validation_tests --features extra_buckets --verbose
    
    - name: Test config loading in integration
      run: cargo test --test integration_tests --verbose
